key=[[0,0,0],[1,0,0],[0,1,1]]
lock=[[1,1,1],[1,1,0],[1,0,1]]
def rotate(key): #*****
    n=len(key)
    result=[[0]*n for _ in range(n)]
    for i in range(n):
        for j in range(n):
            result[j][n-i-1]=key[i][j] #i,j 교차 후 한 원소만 n-i-1
    return result #return값이 key가 아닌 result
def check(new):
    nm = len(new)//3
    for i in range(nm,nm*2):
        for j in range(nm,nm*2):
            if new[i][j]!=1:
                return False
    return True
def solution(key, lock):
    n=len(lock)
    m=len(key)
    new_result=[[0]*(n*3) for _ in range(n*3)]
    for i in range(n):
        for j in range(n):
            new_result[n+i][n+j]=lock[i][j]
    for k in range(4):
            key=rotate(key) #********** rotate(key)만 하면 틀림
            for x in range(n*2):
                for y in range(n*2):
                    for i in range(m):
                        for j in range(m):
                            new_result[i+x][j+y]+=key[i][j]
                    if check(new_result)==True:
                        return True
                    for i in range(m):
                        for j in range(m):
                            new_result[i+x][j+y]-=key[i][j]
    return False
"""if solution(key,lock)==True:
    print("True")
else:
    print("False")"""
